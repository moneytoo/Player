plugins {
    id 'com.android.application'
}

android {
    namespace 'com.brouken.player'
    compileSdk 35
    ndkVersion '21.4.7075529'

    defaultConfig {
        def abiFilter = project.findProperty("abiFilter")
        applicationId "com.brouken.player"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 192
        versionName "0.${versionCode}"
        archivesBaseName = "Just.Player.v${versionName}"
        if (abiFilter) {
            def abiCodeMap = ["x86": 1, "x86_64": 2, "armeabi-v7a": 3, "arm64-v8a": 4]
            versionCode = versionCode * 10 + abiCodeMap[abiFilter]
            ndk {
                abiFilters abiFilter
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "targetSdk", "distribution"
    productFlavors {
        latest {
            dimension "targetSdk"
        }
        legacy {
            dimension "targetSdk"
            versionCode = defaultConfig.versionCode + 1_000_000
            versionNameSuffix "-legacy"
            targetSdkVersion 29
        }

        universal {
            dimension "distribution"
        }
        amazon {
            dimension "distribution"
        }
        accrescent {
            dimension "distribution"
        }
    }
    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("legacy") && (names.contains("amazon") || names.contains("accrescent"))) {
            setIgnore(true)
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release" && variant.flavorName == "latestUniversal") {
            variant.outputs.all { output ->
                output.outputFileName = "${archivesBaseName}.apk"
            }
        }
        if (variant.buildType.name == "release" && variant.flavorName == "legacyUniversal") {
            variant.outputs.all { output ->
                output.outputFileName = "${archivesBaseName}-legacy.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        buildConfig = true
    }
    lint {
        disable 'MissingTranslation'
        disable 'UnsafeOptInUsageError'
    }
}

dependencies {
    def media3_version = '1.6.1'
    def androidxCoreVersion = '1.8.0'
    implementation "androidx.media3:media3-session:$media3_version"
    implementation "androidx.media3:media3-datasource:$media3_version"
    implementation "androidx.media3:media3-decoder:$media3_version"
    implementation "androidx.media3:media3-common:$media3_version"
    implementation "androidx.media3:media3-container:$media3_version"
    implementation("androidx.media3:media3-exoplayer-dash:$media3_version") {
        exclude group: "androidx.media3", module: "media3-exoplayer"
    }
    implementation("androidx.media3:media3-exoplayer-hls:$media3_version") {
        exclude group: "androidx.media3", module: "media3-exoplayer"
    }
    implementation("androidx.media3:media3-exoplayer-smoothstreaming:$media3_version") {
        exclude group: "androidx.media3", module: "media3-exoplayer"
    }
    implementation("androidx.media3:media3-exoplayer-rtsp:$media3_version") {
        exclude group: "androidx.media3", module: "media3-exoplayer"
    }
    implementation 'androidx.recyclerview:recyclerview:1.4.0'
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.13.3'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.3.0'
    implementation "androidx.core:core:$androidxCoreVersion"
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.sigpwned:chardet4j:75.1.2'
    implementation('io.github.peerless2012:ass-media:0.2.1') {
        exclude group: "androidx.media3", module: "media3-ui"
        exclude group: "androidx.media3", module: "media3-extractor"
        exclude group: "androidx.media3", module: "media3-exoplayer"
    }
    implementation project(path: ':doubletapplayerview')
    implementation project(path: ':android-file-chooser')
    implementation fileTree(dir: "libs", include: ["lib-*.aar"])
}